{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ruben\\\\Documents\\\\Projetos\\\\app-congresso-de-inovacao\\\\mobile\\\\src\\\\pages\\\\login\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Toast from 'react-native-tiny-toast';\nimport api from \"../../axiosConfig.js\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport logo from \"../../../assets/feilogo.png\";\nimport globalStyles from \"../../../globalStyles\";\nimport styles from \"../login/styles\";\n\nvar Login = function (_React$Component) {\n  _inherits(Login, _React$Component);\n\n  var _super = _createSuper(Login);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _super.call(this);\n\n    _this.saveUserToken = function _callee(token) {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.setItem('@UserToken', token));\n\n            case 3:\n              Toast.show('Usu치rio autenticado.\\n\\tEntrando...', {\n                duration: Toast.duration.SHORT,\n                containerStyle: {\n                  backgroundColor: '#0d852b'\n                },\n                textStyle: {\n                  color: '#FFF',\n                  fontFamily: 'Sofia-Bold'\n                }\n              });\n\n              _this.navigateToFeed();\n\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              Toast.show('Erro ao autenticar usu치rio.', {\n                duration: Toast.duration.SHORT,\n                containerStyle: {\n                  backgroundColor: '#f74040'\n                },\n                textStyle: {\n                  color: '#FFF',\n                  fontFamily: 'Sofia-Bold'\n                }\n              });\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    };\n\n    _this.authenticateUser = function _callee2() {\n      var res;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(_this.state.user != \"\" && _this.state.pass != \"\")) {\n                _context2.next = 13;\n                break;\n              }\n\n              _context2.prev = 1;\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(api.post('/sessions', {\n                \"username\": _this.state.user,\n                \"password\": _this.state.pass\n              }));\n\n            case 4:\n              res = _context2.sent;\n\n              _this.saveUserToken(res.data.token);\n\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](1);\n\n              if (_context2.t0.response.status == \"400\") {\n                Toast.show('Usu치rio ou senha inv치lidas.\\n\\tTente novamente.', {\n                  duration: Toast.duration.LONG,\n                  containerStyle: {\n                    backgroundColor: '#f74040'\n                  },\n                  textStyle: {\n                    color: '#FFF',\n                    fontFamily: 'Sofia-Bold'\n                  }\n                });\n              } else {\n                  Toast.show('Erro ao conectar com o sevidor\\nTente novamente mais tarde.', {\n                    duration: Toast.duration.LONG,\n                    containerStyle: {\n                      backgroundColor: '#f74040'\n                    },\n                    textStyle: {\n                      color: '#FFF',\n                      fontFamily: 'Sofia-Bold'\n                    }\n                  });\n                }\n\n            case 11:\n              _context2.next = 14;\n              break;\n\n            case 13:\n              Toast.show('Por favor, preencha todos os campos.', {\n                duration: Toast.duration.LONG,\n                containerStyle: {\n                  backgroundColor: '#f0d841'\n                },\n                textStyle: {\n                  color: 'black',\n                  fontFamily: 'Sofia-Bold'\n                }\n              });\n\n            case 14:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[1, 8]], Promise);\n    };\n\n    _this.state = {\n      user: '',\n      pass: ''\n    };\n    _this.authenticateUser = _this.authenticateUser.bind(_assertThisInitialized(_this));\n    _this.saveUserToken = _this.saveUserToken.bind(_assertThisInitialized(_this));\n    _this.navigateToFeed = _this.navigateToFeed.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"navigateToFeed\",\n    value: function navigateToFeed() {\n      this.props.navigation.navigate('Loading');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(SafeAreaView, {\n        style: globalStyles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }\n      }, React.createElement(Image, {\n        style: styles.logoStyle,\n        source: logo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }\n      }), React.createElement(View, {\n        style: styles.formStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.inputHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }\n      }, \"Usu\\xE1rio\"), React.createElement(TextInput, {\n        style: [styles.inputStyle, {\n          fontFamily: 'Sofia-Light'\n        }],\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            user: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }\n      }), React.createElement(Text, {\n        style: styles.inputHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }\n      }, \"Senha\"), React.createElement(TextInput, {\n        style: [styles.inputStyle, {\n          fontFamily: 'Sofia-Bold'\n        }],\n        secureTextEntry: true,\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            pass: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.confirmButton,\n        onPress: this.authenticateUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: '#FFF',\n          fontWeight: 'bold'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 15\n        }\n      }, \"Entrar\")))));\n    }\n  }]);\n\n  return Login;\n}(React.Component);\n\nexport { Login as default };","map":{"version":3,"sources":["C:/Users/Ruben/Documents/Projetos/app-congresso-de-inovacao/mobile/src/pages/login/index.js"],"names":["React","Toast","api","AsyncStorage","logo","globalStyles","styles","Login","props","saveUserToken","token","setItem","show","duration","SHORT","containerStyle","backgroundColor","textStyle","color","fontFamily","navigateToFeed","authenticateUser","state","user","pass","post","res","data","response","status","LONG","bind","navigation","navigate","container","logoStyle","formStyle","inputHeader","inputStyle","text","setState","confirmButton","fontWeight","Component"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;AAGA,OAAOC,KAAP,MAAkB,yBAAlB;AAGA,OAAOC,GAAP;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AAGA,OAAOC,IAAP;AACA,OAAOC,YAAP;AACA,OAAOC,MAAP;;IAEqBC,K;;;;;AACnB,iBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB;;AADgB,UAmBlBC,aAnBkB,GAmBF,iBAAMC,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAENP,YAAY,CAACQ,OAAb,CAAqB,YAArB,EAAkCD,KAAlC,CAFM;;AAAA;AAGZT,cAAAA,KAAK,CAACW,IAAN,CAAW,qCAAX,EAAiD;AAC/CC,gBAAAA,QAAQ,EAAEZ,KAAK,CAACY,QAAN,CAAeC,KADsB;AAE/CC,gBAAAA,cAAc,EAAE;AAACC,kBAAAA,eAAe,EAAE;AAAlB,iBAF+B;AAG/CC,gBAAAA,SAAS,EAAE;AAACC,kBAAAA,KAAK,EAAE,MAAR;AAAgBC,kBAAAA,UAAU,EAAE;AAA5B;AAHoC,eAAjD;;AAKA,oBAAKC,cAAL;;AARY;AAAA;;AAAA;AAAA;AAAA;AAWZnB,cAAAA,KAAK,CAACW,IAAN,CAAW,6BAAX,EAAyC;AACvCC,gBAAAA,QAAQ,EAAEZ,KAAK,CAACY,QAAN,CAAeC,KADc;AAEvCC,gBAAAA,cAAc,EAAE;AAACC,kBAAAA,eAAe,EAAE;AAAlB,iBAFuB;AAGvCC,gBAAAA,SAAS,EAAE;AAACC,kBAAAA,KAAK,EAAE,MAAR;AAAgBC,kBAAAA,UAAU,EAAE;AAA5B;AAH4B,eAAzC;;AAXY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAnBE;;AAAA,UAyClBE,gBAzCkB,GAyCC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACd,MAAKC,KAAL,CAAWC,IAAX,IAAmB,EAAnB,IAAyB,MAAKD,KAAL,CAAWE,IAAX,IAAmB,EAD9B;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,+CAGKtB,GAAG,CAACuB,IAAJ,CAAS,WAAT,EAAqB;AACrC,4BAAY,MAAKH,KAAL,CAAWC,IADc;AAErC,4BAAY,MAAKD,KAAL,CAAWE;AAFc,eAArB,CAHL;;AAAA;AAGPE,cAAAA,GAHO;;AAOb,oBAAKjB,aAAL,CAAmBiB,GAAG,CAACC,IAAJ,CAASjB,KAA5B;;AAPa;AAAA;;AAAA;AAAA;AAAA;;AAWb,kBAAG,aAAMkB,QAAN,CAAeC,MAAf,IAAyB,KAA5B,EAAkC;AAChC5B,gBAAAA,KAAK,CAACW,IAAN,CAAW,iDAAX,EAA6D;AAC3DC,kBAAAA,QAAQ,EAAEZ,KAAK,CAACY,QAAN,CAAeiB,IADkC;AAE3Df,kBAAAA,cAAc,EAAE;AAACC,oBAAAA,eAAe,EAAE;AAAlB,mBAF2C;AAG3DC,kBAAAA,SAAS,EAAE;AAACC,oBAAAA,KAAK,EAAE,MAAR;AAAgBC,oBAAAA,UAAU,EAAE;AAA5B;AAHgD,iBAA7D;AAKD,eAND,MAQI;AACFlB,kBAAAA,KAAK,CAACW,IAAN,CAAW,6DAAX,EAAyE;AACvEC,oBAAAA,QAAQ,EAAEZ,KAAK,CAACY,QAAN,CAAeiB,IAD8C;AAEvEf,oBAAAA,cAAc,EAAE;AAACC,sBAAAA,eAAe,EAAE;AAAlB,qBAFuD;AAGvEC,oBAAAA,SAAS,EAAE;AAACC,sBAAAA,KAAK,EAAE,MAAR;AAAgBC,sBAAAA,UAAU,EAAE;AAA5B;AAH4D,mBAAzE;AAKD;;AAzBY;AAAA;AAAA;;AAAA;AA+BflB,cAAAA,KAAK,CAACW,IAAN,CAAW,sCAAX,EAAkD;AAChDC,gBAAAA,QAAQ,EAAEZ,KAAK,CAACY,QAAN,CAAeiB,IADuB;AAEhDf,gBAAAA,cAAc,EAAE;AAACC,kBAAAA,eAAe,EAAE;AAAlB,iBAFgC;AAGhDC,gBAAAA,SAAS,EAAE;AAACC,kBAAAA,KAAK,EAAE,OAAR;AAAiBC,kBAAAA,UAAU,EAAE;AAA7B;AAHqC,eAAlD;;AA/Be;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAzCD;;AAEhB,UAAKG,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,IAAI,EAAE;AAFK,KAAb;AAIA,UAAKH,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBU,IAAtB,+BAAxB;AACA,UAAKtB,aAAL,GAAqB,MAAKA,aAAL,CAAmBsB,IAAnB,+BAArB;AACA,UAAKX,cAAL,GAAsB,MAAKA,cAAL,CAAoBW,IAApB,+BAAtB;AARgB;AASjB;;;;qCAEe;AACd,WAAKvB,KAAL,CAAWwB,UAAX,CAAsBC,QAAtB,CAA+B,SAA/B;AACD;;;6BAoEO;AAAA;;AACN,aACE,oBAAC,YAAD;AAAc,QAAA,KAAK,EAAI5B,YAAY,CAAC6B,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,KAAK,EAAE5B,MAAM,CAAC6B,SADhB;AAEE,QAAA,MAAM,EAAE/B,IAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAIE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEE,MAAM,CAAC8B,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE9B,MAAM,CAAC+B,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE,oBAAC,SAAD;AACA,QAAA,KAAK,EAAE,CAAC/B,MAAM,CAACgC,UAAR,EAAmB;AAACnB,UAAAA,UAAU,EAAE;AAAb,SAAnB,CADP;AAEA,QAAA,YAAY,EAAE,sBAAAoB,IAAI;AAAA,iBAAI,MAAI,CAACC,QAAL,CAAc;AAACjB,YAAAA,IAAI,EAAEgB;AAAP,WAAd,CAAJ;AAAA,SAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAKE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEjC,MAAM,CAAC+B,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBALF,EAME,oBAAC,SAAD;AACA,QAAA,KAAK,EAAE,CAAC/B,MAAM,CAACgC,UAAR,EAAmB;AAACnB,UAAAA,UAAU,EAAE;AAAb,SAAnB,CADP;AAEA,QAAA,eAAe,EAAE,IAFjB;AAGA,QAAA,YAAY,EAAE,sBAAAoB,IAAI;AAAA,iBAAI,MAAI,CAACC,QAAL,CAAc;AAAChB,YAAAA,IAAI,EAAEe;AAAP,WAAd,CAAJ;AAAA,SAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAUE,oBAAC,gBAAD;AACA,QAAA,KAAK,EAAEjC,MAAM,CAACmC,aADd;AAEA,QAAA,OAAO,EAAE,KAAKpB,gBAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACH,UAAAA,KAAK,EAAE,MAAR;AAAgBwB,UAAAA,UAAU,EAAE;AAA5B,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,CAVF,CAJF,CADF,CADF;AAyBD;;;;EA5GgC1C,KAAK,CAAC2C,S;;SAApBpC,K","sourcesContent":["import React from 'react'\r\nimport {View,Text,TouchableOpacity,\r\n        SafeAreaView, Image, TextInput} from 'react-native';\r\nimport Toast from 'react-native-tiny-toast';\r\n\r\n//Backend integration and persistent data\r\nimport api from '../../axiosConfig.js';\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\n\r\n//Styles and images\r\nimport logo from '../../../assets/feilogo.png'\r\nimport globalStyles from '../../../globalStyles'\r\nimport styles from '../login/styles';\r\n\r\nexport default class Login extends React.Component {\r\n  constructor(props){\r\n    super();\r\n    this.state = {\r\n      user: '',\r\n      pass: ''\r\n    }\r\n    this.authenticateUser = this.authenticateUser.bind(this);\r\n    this.saveUserToken = this.saveUserToken.bind(this);\r\n    this.navigateToFeed = this.navigateToFeed.bind(this);\r\n  }\r\n\r\n  navigateToFeed(){\r\n    this.props.navigation.navigate('Loading');\r\n  }\r\n\r\n  /**\r\n   * Method to save the user token on asyncStorage.\r\n   * @param {string} token: Token acquired by backend after api.post.\r\n   */\r\n  saveUserToken = async(token) =>{\r\n    try{\r\n      await AsyncStorage.setItem('@UserToken',token);\r\n      Toast.show('Usu치rio autenticado.\\n\\tEntrando...',{\r\n        duration: Toast.duration.SHORT,\r\n        containerStyle: {backgroundColor: '#0d852b'},\r\n        textStyle: {color: '#FFF', fontFamily: 'Sofia-Bold'},\r\n      });\r\n      this.navigateToFeed();\r\n    }\r\n    catch(e){\r\n      Toast.show('Erro ao autenticar usu치rio.',{\r\n        duration: Toast.duration.SHORT,\r\n        containerStyle: {backgroundColor: '#f74040'},\r\n        textStyle: {color: '#FFF', fontFamily: 'Sofia-Bold'}\r\n      })\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Method to receive info from backend and authenticate (or not) the user.\r\n   */\r\n  authenticateUser = async() =>{\r\n    if(this.state.user != \"\" && this.state.pass != \"\"){\r\n      try{\r\n        const res = await api.post('/sessions',{\r\n          \"username\": this.state.user,\r\n          \"password\": this.state.pass\r\n        });\r\n        this.saveUserToken(res.data.token);\r\n      }\r\n      catch(error){\r\n        //Incorrect combination of user/password (400 bad request)\r\n        if(error.response.status == \"400\"){\r\n          Toast.show('Usu치rio ou senha inv치lidas.\\n\\tTente novamente.',{\r\n            duration: Toast.duration.LONG,\r\n            containerStyle: {backgroundColor: '#f74040'},\r\n            textStyle: {color: '#FFF', fontFamily: 'Sofia-Bold'},\r\n          })\r\n        }\r\n        //Error in server connection (wrong path/wrong IP)\r\n        else{\r\n          Toast.show('Erro ao conectar com o sevidor\\nTente novamente mais tarde.',{\r\n            duration: Toast.duration.LONG,\r\n            containerStyle: {backgroundColor: '#f74040'},\r\n            textStyle: {color: '#FFF', fontFamily: 'Sofia-Bold'},\r\n          })\r\n        }\r\n      }\r\n    }\r\n    //User doesn't inserted name and/or password.\r\n    else\r\n    {\r\n      Toast.show('Por favor, preencha todos os campos.',{\r\n        duration: Toast.duration.LONG,\r\n        containerStyle: {backgroundColor: '#f0d841'},\r\n        textStyle: {color: 'black', fontFamily: 'Sofia-Bold'},\r\n      })\r\n    }\r\n  }\r\n  \r\n\r\n  render(){\r\n    return(\r\n      <SafeAreaView style = {globalStyles.container}>\r\n        <View>\r\n          <Image \r\n            style={styles.logoStyle}\r\n            source={logo}/>\r\n          <View style={styles.formStyle}>\r\n            <Text style={styles.inputHeader}>Usu치rio</Text>\r\n            <TextInput \r\n            style={[styles.inputStyle,{fontFamily: 'Sofia-Light'}]}\r\n            onChangeText={text => this.setState({user: text})}/>\r\n            <Text style={styles.inputHeader}>Senha</Text>\r\n            <TextInput \r\n            style={[styles.inputStyle,{fontFamily: 'Sofia-Bold'}]}\r\n            secureTextEntry={true}\r\n            onChangeText={text => this.setState({pass: text})}/>\r\n            <TouchableOpacity \r\n            style={styles.confirmButton}\r\n            onPress={this.authenticateUser}>\r\n              <Text style={{color: '#FFF', fontWeight: 'bold'}}>Entrar</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </SafeAreaView>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}