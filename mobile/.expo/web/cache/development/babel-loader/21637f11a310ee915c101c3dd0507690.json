{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ruben\\\\Documents\\\\Projetos\\\\app-congresso-de-inovacao\\\\mobile\\\\src\\\\pages\\\\loading\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport LottieView from 'lottie-react-native';\nimport lottieAnimation from \"../../../assets/components/loading.json\";\nimport AsyncStorage from '@react-native-community/async-storage';\nimport globalStyles from \"../../../globalStyles\";\nimport FeiLogo from \"../../../assets/feilogo.png\";\nimport styles from \"../loading/styles\";\n\nvar Loading = function (_Component) {\n  _inherits(Loading, _Component);\n\n  var _super = _createSuper(Loading);\n\n  function Loading(props) {\n    var _this;\n\n    _classCallCheck(this, Loading);\n\n    _this = _super.call(this);\n\n    _this.getUserToken = function _callee() {\n      var userToken;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(AsyncStorage.getItem('@UserToken'));\n\n            case 3:\n              userToken = _context.sent;\n\n              if (userToken != null) {\n                _this.navigateToFeed();\n              }\n\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    };\n\n    _this.getUserToken = _this.getUserToken.bind(_assertThisInitialized(_this));\n    _this.navigateToFeed = _this.navigateToFeed.bind(_assertThisInitialized(_this));\n\n    _this.getUserToken();\n\n    return _this;\n  }\n\n  _createClass(Loading, [{\n    key: \"navigateToFeed\",\n    value: function navigateToFeed() {\n      this.props.navigation.navigate('Feed', {\n        screen: 'Feed'\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: [globalStyles.container],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }\n      }, React.createElement(Image, {\n        source: FeiLogo,\n        style: styles.logoStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 17\n        }\n      }), React.createElement(LottieView, {\n        source: lottieAnimation,\n        autoPlay: true,\n        loop: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Loading;\n}(Component);\n\nexport { Loading as default };","map":{"version":3,"sources":["C:/Users/Ruben/Documents/Projetos/app-congresso-de-inovacao/mobile/src/pages/loading/index.js"],"names":["React","Component","LottieView","lottieAnimation","AsyncStorage","globalStyles","FeiLogo","styles","Loading","props","getUserToken","getItem","userToken","navigateToFeed","console","log","bind","navigation","navigate","screen","container","logoStyle"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAIA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,eAAP;AAGA,OAAOC,YAAP,MAAyB,uCAAzB;AAGA,OAAOC,YAAP;AACA,OAAOC,OAAP;AACA,OAAOC,MAAP;;IAEqBC,O;;;;;AACjB,mBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd;;AADc,UAWlBC,YAXkB,GAWH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEiBN,YAAY,CAACO,OAAb,CAAqB,YAArB,CAFjB;;AAAA;AAEDC,cAAAA,SAFC;;AAGP,kBAAGA,SAAS,IAAI,IAAhB,EAAqB;AACjB,sBAAKC,cAAL;AACH;;AALM;AAAA;;AAAA;AAAA;AAAA;AAOPC,cAAAA,OAAO,CAACC,GAAR;;AAPO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAXG;;AAEd,UAAKL,YAAL,GAAoB,MAAKA,YAAL,CAAkBM,IAAlB,+BAApB;AACA,UAAKH,cAAL,GAAsB,MAAKA,cAAL,CAAoBG,IAApB,+BAAtB;;AACA,UAAKN,YAAL;;AAJc;AAKjB;;;;qCAEe;AACZ,WAAKD,KAAL,CAAWQ,UAAX,CAAsBC,QAAtB,CAA+B,MAA/B,EAAuC;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAvC;AACH;;;6BAaM;AACH,aACI,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE,CAACd,YAAY,CAACe,SAAd,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AACA,QAAA,MAAM,EAAEd,OADR;AAEA,QAAA,KAAK,EAAEC,MAAM,CAACc,SAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAKI,oBAAC,UAAD;AAAY,QAAA,MAAM,EAAElB,eAApB;AAAqC,QAAA,QAAQ,MAA7C;AAA8C,QAAA,IAAI,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,CADJ;AASH;;;;EAjCgCF,S;;SAAhBO,O","sourcesContent":["import React, { Component } from \"react\";\r\nimport { View, Image} from 'react-native';\r\n\r\n//Loading animation\r\nimport LottieView from 'lottie-react-native';\r\nimport lottieAnimation from \"../../../assets/components/loading.json\"; \r\n\r\n//Persistent data with AsyncStorage\r\nimport AsyncStorage from '@react-native-community/async-storage';\r\n\r\n//Style and images\r\nimport globalStyles from \"../../../globalStyles\";\r\nimport FeiLogo from \"../../../assets/feilogo.png\";\r\nimport styles from \"../loading/styles\";\r\n\r\nexport default class Loading extends Component{\r\n    constructor(props){\r\n        super()\r\n        this.getUserToken = this.getUserToken.bind(this);\r\n        this.navigateToFeed = this.navigateToFeed.bind(this);\r\n        this.getUserToken();\r\n    }  \r\n\r\n    navigateToFeed(){\r\n        this.props.navigation.navigate('Feed', { screen: 'Feed' });\r\n    }\r\n\r\n    getUserToken = async() =>{\r\n        try{\r\n            const userToken = await AsyncStorage.getItem('@UserToken');\r\n            if(userToken != null){ //User already been authenticated and have a token\r\n                this.navigateToFeed();\r\n            }\r\n        } catch(e){\r\n            console.log(e);\r\n        }\r\n    }  \r\n\r\n   render(){\r\n        return(\r\n            <View style={[globalStyles.container]}>\r\n                <Image\r\n                source={FeiLogo}\r\n                style={styles.logoStyle}\r\n                />\r\n                <LottieView source={lottieAnimation} autoPlay loop/>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}